{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/UI/Header.svelte","../../src/UI/Homepage.svelte","../../src/UI/LoadingSpinner.svelte","../../src/UI/ApodView.svelte","../../src/helpers/validation.js","../../src/UI/SearchView.svelte","../../src/UI/LoadingSpinnerSat.svelte","../../src/UI/SatelliteView.svelte","../../src/UI/AboutView.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.2' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n\timport { createEventDispatcher } from \"svelte\";\n\n\tconst dispatch = createEventDispatcher();\n\n\tlet selectedButton = 0;\n</script>\n\n<nav class=\"navbar nav-row\">\n\t<!-- <h2 class=\"navbar-logo\">AstroPark</h2> -->\n\n\t<ul class=\"navbar-list\">\n\t\t<li\n\t\t\tclass:active={selectedButton === 0}\n\t\t\ton:click={() => {\n\t\t\t\tselectedButton = 0;\n\t\t\t\tdispatch(\"select\", 1);\n\t\t\t}}\n\t\t>\n\t\t\t<div>apod</div>\n\t\t</li>\n\n\t\t<li\n\t\t\tclass:active={selectedButton === 1}\n\t\t\ton:click={() => {\n\t\t\t\tselectedButton = 0;\n\t\t\t\tdispatch(\"select\", 2);\n\t\t\t}}\n\t\t>\n\t\t\t<div>lib</div>\n\t\t</li>\n\t</ul>\n\n\t<!-- svelte-ignore a11y-missing-attribute -->\n\t<!-- svelte-ignore a11y-invalid-attribute -->\n\t<a href=\"#\"\n\t\t><img\n\t\t\ton:click={() => {\n\t\t\t\tselectedButton = 0;\n\t\t\t\tdispatch(\"select\", 0);\n\t\t\t}}\n\t\t\tsrc=\"./Images/AP.png\"\n\t\t/></a\n\t>\n\n\t<ul>\n\t\t<li\n\t\t\tclass:active={selectedButton === 2}\n\t\t\ton:click={() => {\n\t\t\t\tselectedButton = 0;\n\t\t\t\tdispatch(\"select\", 3);\n\t\t\t}}\n\t\t>\n\t\t\t<div>lir</div>\n\t\t</li>\n\n\t\t<li\n\t\t\tclass:active={selectedButton === 3}\n\t\t\ton:click={() => {\n\t\t\t\tselectedButton = 0;\n\t\t\t\tdispatch(\"select\", 4);\n\t\t\t}}\n\t\t>\n\t\t\t<div>about</div>\n\t\t</li>\n\t</ul>\n</nav>\n\n<style>\n\tnav {\n\t\tz-index: 3;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\ttext-align: center;\n\t\t/* background-color: solid #2c394b; */\n\t\tcolor: var(--text);\n\t\tmargin-top: -1em !important;\n\t}\n\n\timg {\n\t\tmax-width: 90px;\n\t}\n\t.nav-row {\n\t\t/* background-color: #082032;\n\t\tbox-shadow: 0 8px 18px 2px #061928; */\n\t}\n\tnav ul {\n\t\tlist-style-type: none;\n\t\tdisplay: flex;\n\t\tmargin: 0 15px 2px;\n\t\theight: 100%;\n\t\tpadding-inline-start: 0px !important;\n\t}\n\n\tnav ul li {\n\t\theight: 100%;\n\t\tmargin: 0px 20px;\n\t\tpadding: 45px 0px;\n\t\tfont-size: 22px;\n\t\ttext-transform: uppercase;\n\t}\n\n\tnav ul li div {\n\t\tfont-family: var(--heading);\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t\tletter-spacing: 0.1em;\n\t\tpadding: 10px 0px;\n\t}\n\n\tnav ul li div:after {\n\t\tbackground: none repeat scroll 0 0 transparent;\n\t\tbottom: 0;\n\t\tcontent: \"\";\n\t\tdisplay: block;\n\t\theight: 2px;\n\t\tleft: 50%;\n\t\tposition: absolute;\n\t\tbackground: #fff;\n\t\ttransition: width 0.3s ease 0s, left 0.3s ease 0s;\n\t\twidth: 0;\n\t}\n\n\tnav ul li div:hover {\n\t\tcursor: pointer;\n\t}\n\n\tnav ul li div:hover:after {\n\t\twidth: 100%;\n\t\tleft: 0;\n\t}\n\n\tnav ul li:hover {\n\t\t/* color: #ffffff;\n\t\tcursor: pointer;\n\t\ttransform: scale(110%); */\n\t}\n\n\t/* nav h2 {\n\t\tpadding: 0 15px;\n\t\tmargin-top: 10px;\n\t} */\n</style>\n","<section class=\"showcase\">\n\t<div class=\"video-container\">\n\t\t<video src=\"./Video/bgvid.mp4\" autoplay muted loop />\n\t</div>\n\t<div class=\"content\">\n\t\t<h1>astropark</h1>\n\t\t<div>one stop shop for all astronomy lovers</div>\n\t</div>\n</section>\n\n<style>\n\th1 {\n\t\tfont-family: var(--heading);\n\t\tfont-weight: 300;\n\t\tfont-size: 100px;\n\t\tline-height: 0.9;\n\t\tmargin-bottom: 15px;\n\t\ttext-transform: capitalize;\n\t\tletter-spacing: 5px;\n\t}\n\n\t.showcase {\n\t\theight: 77vh;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\ttext-align: center;\n\t\tcolor: var(--text);\n\t\tpadding: 0 20px;\n\t}\n\n\t.video-container {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: hidden;\n\t\tbackground: var(--primary) no-repeat center center/cover;\n\t}\n\n\t.video-container video {\n\t\tmin-width: 100%;\n\t\tmin-height: 100%;\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\tobject-fit: cover;\n\t}\n\n\t.video-container:after {\n\t\tcontent: \"\";\n\t\tz-index: 1;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tbackground: rgba(51, 47, 105, 0.295);\n\t\tposition: absolute;\n\t}\n\n\t.content {\n\t\tz-index: 2;\n\t\tmargin-top: -135px;\n\t}\n\n\t.content div {\n\t\tfont-size: 22px;\n\t\ttext-transform: uppercase;\n\t\tletter-spacing: 1px;\n\t}\n</style>\n","<h1>\n    <span class=\"let1\">A</span>\n    <span class=\"let2\">S</span>\n    <span class=\"let3\">T</span>\n    <span class=\"let4\">R</span>\n    <span class=\"let5\">O</span>\n    <span class=\"let6\">&nbsp;</span>\n    <span class=\"let7\">P</span>\n    <span class=\"let8\">A</span>\n    <span class=\"let9\">R</span>\n    <span class=\"let10\">K</span>\n</h1>\n\n<style>\n    h1 {\n        text-align: center;\n        height: max-content;\n        margin-top: 30vh;\n        padding: 0;\n        font-family: ‘Arial Narrow’, sans-serif;\n        font-weight: 100;\n        font-size: 1.1em;\n        color: #a3e1f0;\n    }\n\n    span {\n        position: relative;\n        top: 0.63em;\n        display: inline-block;\n        text-transform: uppercase;\n        opacity: 0;\n        transform: rotateX(-90deg);\n    }\n\n    .let1 {\n        animation: drop 1.1s ease-in-out infinite;\n        animation-delay: 0s;\n    }\n\n    .let2 {\n        animation: drop 1.1s ease-in-out infinite;\n        animation-delay: 0.1s;\n    }\n\n    .let3 {\n        animation: drop 1.1s ease-in-out infinite;\n        animation-delay: 0.2s;\n    }\n\n    .let4 {\n        animation: drop 1.1s ease-in-out infinite;\n        animation-delay: 0.3s;\n    }\n\n    .let5 {\n        animation: drop 1.1s ease-in-out infinite;\n        animation-delay: 0.4s;\n    }\n\n    .let7 {\n        animation: drop 1.1s ease-in-out infinite;\n        animation-delay: 0.5s;\n    }\n\n    .let8 {\n        animation: drop 1.1s ease-in-out infinite;\n        animation-delay: 0.6s;\n    }\n\n    .let9 {\n        animation: drop 1.1s ease-in-out infinite;\n        animation-delay: 0.7s;\n    }\n\n    .let10 {\n        animation: drop 1.1s ease-in-out infinite;\n        animation-delay: 0.8s;\n    }\n    /* \n.let10 {\n  animation: drop 1.3s ease-in-out infinite;\n  animation-delay: 3.4s;\n} */\n\n    @keyframes drop {\n        10% {\n            opacity: 0.5;\n        }\n        20% {\n            opacity: 1;\n            top: 3.78em;\n            transform: rotateX(-360deg);\n        }\n        80% {\n            opacity: 1;\n            top: 3.78em;\n            transform: rotateX(-360deg);\n        }\n        90% {\n            opacity: 0.5;\n        }\n        100% {\n            opacity: 0;\n            top: 6.94em;\n        }\n    }\n</style>\n","<script>\n    import LoadingSpinner from \"./LoadingSpinner.svelte\";\n\n    let imageUrl;\n    let title;\n    let description;\n    let owner;\n\n    let fetched = false;\n\n    axios.get(\"https://astropark.herokuapp.com/apod\").then((response) => {\n        // console.log(response);\n        imageUrl = response.data.url;\n        title = response.data.title;\n        description = response.data.explanation;\n        owner = response.data.copyright;\n        fetched = true;\n    });\n</script>\n\n<div class=\"main\">\n    <div class=\"main-content\">\n        {#if !fetched}\n            <LoadingSpinner />\n        {:else}\n            <img src={imageUrl} alt={title} />\n            <div class=\"description\">\n                <span class=\"title\">{title}</span>\n                <p>{description}</p>\n                <span class=\"owner\">-{owner || \"Unknown\"}</span>\n            </div>\n        {/if}\n    </div>\n</div>\n\n<style>\n    .main {\n        position: absolute;\n        top: 2.5rem;\n        display: flex;\n        margin-top: 30px;\n        justify-content: center;\n        align-items: bottom;\n        height: 100vh;\n        width: 100vw;\n        overflow: hidden;\n    }\n\n    .main-content {\n        width: 100%;\n        height: 100%;\n        position: relative;\n    }\n\n    .main-content img {\n        vertical-align: middle;\n        width: 100vw;\n        height: 100vh;\n    }\n    .description {\n        position: relative;\n        bottom: 10%;\n        width: 100vw;\n        color: #fff;\n        position: absolute;\n        /* bottom: 10px; */\n        padding: 0 15px 15px 15px;\n        background-color: rgba(0, 0, 0, 0.5);\n    }\n\n    .description .title {\n        font-size: 30px;\n    }\n</style>\n","\nexport function isEmpty(val){\n    return val.trim() == 0;\n}","<script>\n\timport SearchElement from \"../Elements/SearchElement.svelte\";\n\timport { isEmpty } from \"../helpers/validation.js\";\n\n\tconst baseUrl = \"https://astropark.herokuapp.com/search?q=\";\n\tlet url;\n\tlet filteredData;\n\tlet pageData;\n\tlet fetched = false;\n\tlet hasValidData = true;\n\n\tlet keyword = \"\";\n\n\t$: keywordValid = !isEmpty(keyword);\n\t$: hasValidData = filteredData != 0;\n\t// $: console.log(keyword);\n\n\tconst fetchData = () => {\n\t\tif (keywordValid) {\n\t\t\turl = baseUrl + keyword.trim();\n\t\t\taxios.get(url).then((response) => {\n\t\t\t\tfilteredData = response.data.filter(\n\t\t\t\t\t(e) => e.links !== undefined\n\t\t\t\t);\n\t\t\t\tpageData = filteredData.slice(0, 8);\n\t\t\t\tfetched = true;\n\t\t\t\t// console.log(pageData);\n\t\t\t});\n\t\t}\n\t};\n</script>\n\n<!-- <div class=\"search\">\n\t<div class=\"search-container\">\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tplaceholder=\"Enter a valid search term..\"\n\t\t\ton:input={(event) => (keyword = event.target.value)}\n\t\t/>\n\t\t<button on:click={fetchData}><i class=\"fas fa-search\" /></button>\n\t\t{#if !keywordValid}\n\t\t\t<p class=\"error\">Please enter valid data!</p>\n\t\t{/if}\n\t</div>\n</div> -->\n\n<div class=\"search-container\">\n\t<div class=\"search\" action=\"\">\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tplaceholder=\"Search for a valid term\"\n\t\t\ton:input={(event) => (keyword = event.target.value)}\n\t\t/>\n\t\t<button on:click={fetchData}><i class=\"fas fa-search\" /></button>\n\t</div>\n\t<!-- {#if !keywordValid}\n\t\t\t<span class=\"error\">Enter valid data!</span>\n\t\t{/if} -->\n</div>\n\n<!-------------------------- search element redesigning tbd -------------------------->\n\n<!-- <div class=\"search-results\">\n\t{#if fetched && hasValidData}\n\t\t{#each pageData as element (element.href)}\n\t\t\t<SearchElement {element} />\n\t\t{/each}\n\t{:else if !hasValidData}\n\t\t<h2>No Data Found!</h2>\n\t{/if}\n</div> -->\n<style>\n\t/* .error {\n\t\tcolor: #ff4c29;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t} */\n\n\t.search {\n\t\twidth: 45vw;\n\t\theight: 40px;\n\t\tmargin: 0 auto;\n\t\tbackground: var(--secondary);\n\t\tborder-radius: 3px;\n\t\tborder: transparent;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\t.search input {\n\t\t/* padding: 10px 5px; */\n\t\tmargin-left: 10px;\n\t\twidth: 90%;\n\t\theight: 100%;\n\t\tcolor: var(--text);\n\t\tborder: 0;\n\t\tbackground: transparent;\n\t\tborder-radius: 3px 0 0 3px;\n\t}\n\n\t.search input:focus {\n\t\toutline: 0;\n\t\t/* background: transparent; */\n\t}\n\n\t.fas {\n\t\tcolor: var(--text);\n\t}\n\n\tbutton {\n\t\tborder: 0;\n\t\tpadding: 0;\n\t\tcursor: pointer;\n\t\theight: 100%;\n\t\twidth: 10%;\n\t\tbackground: var(--accent);\n\n\t\tborder-radius: 0 3px 3px 0;\n\t}\n\n\tbutton:hover {\n\t\tbackground: var(--accent);\n\t}\n\n\tbutton:active {\n\t\tbackground: var(--accent);\n\t}\n\tbutton:focus {\n\t\toutline: 0;\n\t}\n\n\t/* .search {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tposition: relative;\n\t\theight: 20vh;\n\t}\n\t::placeholder {\n\t\tcolor: #fff;\n\t\topacity: 0.3;\n\t}\n\t.search .search-container input {\n\t\toutline: none;\n\t\tpadding: 7px 10px;\n\t\tmargin: 0;\n\t\tfont-size: 18px;\n\t\tborder: none;\n\t\tcolor: #fff;\n\t\tbackground-color: #2c394b;\n\t\tborder-radius: 30px 0px 0px 30px;\n\t\tbox-shadow: 0 0 10px 0 #334756, 0 20px 25px 0 rgba(0, 0, 0, 0.1);\n\t}\n\t.search .search-container button {\n\t\toutline: none;\n\t\tpadding: 7px 10px;\n\t\tmargin: 0;\n\t\tbackground-color: #2c394b;\n\t\tborder-radius: 0px 30px 30px 0px;\n\t\tcolor: #fff;\n\t\tfont-size: 18px;\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\tbox-shadow: 0 0 10px 0 #334756, 0 20px 25px 0 rgba(0, 0, 0, 0.1);\n\t} */\n\n\t.search-results {\n\t\tmargin-top: 10px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tflex-wrap: wrap;\n\t\t/* width: 100vw; */\n\t}\n</style>\n","<div class=\"lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n</div>\n\n<style>\n    .lds-ring {\n        display: inline-block;\n        position: relative;\n        width: 80px;\n        height: 80px;\n    }\n    .lds-ring div {\n        box-sizing: border-box;\n        display: block;\n        position: absolute;\n        width: 64px;\n        height: 64px;\n        margin: 8px;\n        border: 8px solid #fff;\n        border-radius: 50%;\n        animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n        border-color: #fff transparent transparent transparent;\n    }\n    .lds-ring div:nth-child(1) {\n        animation-delay: -0.45s;\n    }\n    .lds-ring div:nth-child(2) {\n        animation-delay: -0.3s;\n    }\n    .lds-ring div:nth-child(3) {\n        animation-delay: -0.15s;\n    }\n    @keyframes lds-ring {\n        0% {\n            transform: rotate(0deg);\n        }\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n</style>\n","<script>\n\timport { isEmpty } from \"../helpers/validation.js\";\n\n\timport LoadingSpinnerSatellite from \"./LoadingSpinnerSat.svelte\";\n\n\tlet latitude = \"\";\n\tlet longitude = \"\";\n\tlet rDate = \"\";\n\tlet pDate = \"\";\n\n\tconst baseUrl = \"https://astropark.herokuapp.com/satellite?\";\n\tlet recentUrl, pastUrl;\n\n\tlet isLoading1 = false;\n\tlet isLoading2 = false;\n\n\tlet isFormValid = false;\n\tlet showImages = false;\n\n\tlet pastImageDiv;\n\tlet recentImageDiv;\n\n\t$: latitudeValid = !isEmpty(latitude);\n\t$: longitudevalid = !isEmpty(longitude);\n\t$: rDatevalid = !isEmpty(rDate);\n\t$: pDatevalid = !isEmpty(pDate);\n\t$: isFormValid =\n\t\tlatitudeValid && longitudevalid && rDatevalid && pDatevalid;\n\n\tconst submitForm = () => {\n\t\tif (isFormValid) {\n\t\t\trecentUrl = `${baseUrl}latitude=${latitude}&longitude=${longitude}&date=${rDate}`;\n\t\t\tpastUrl = `${baseUrl}latitude=${latitude}&longitude=${longitude}&date=${pDate}`;\n\t\t\tshowImages = true;\n\t\t\tisLoading1 = true;\n\t\t\tisLoading2 = true;\n\n\t\t\tlet pastImage = new Image();\n\t\t\tpastImage.src = pastUrl;\n\t\t\tpastImage.onload = function () {\n\t\t\t\tisLoading1 = false;\n\t\t\t\tif (!pastImageDiv.querySelector(\"img\")) {\n\t\t\t\t\tpastImageDiv.appendChild(pastImage);\n\t\t\t\t} else {\n\t\t\t\t\tconst oldImg1 = pastImageDiv.querySelector(\"img\");\n\t\t\t\t\toldImg1.parentNode.replaceChild(pastImage, oldImg1);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet recentImage = new Image();\n\t\t\trecentImage.src = recentUrl;\n\t\t\trecentImage.onload = function () {\n\t\t\t\tisLoading2 = false;\n\t\t\t\tif (!recentImageDiv.querySelector(\"img\")) {\n\t\t\t\t\trecentImageDiv.appendChild(recentImage);\n\t\t\t\t} else {\n\t\t\t\t\tconst oldImg2 = recentImageDiv.querySelector(\"img\");\n\t\t\t\t\toldImg2.parentNode.replaceChild(recentImage, oldImg2);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n</script>\n\n<!-- <div class=\"main-compare-container\">\n    <h1>Want to compare the satellite images of a particular region?</h1>\n    <div class=\"form\">\n        <div class=\"inputs\">\n            <div class=\"input\">\n                <label for=\"latitude\">Latitude</label>\n                <input\n                    type=\"Number\"\n                    id=\"latitude\"\n                    class=\"latitude\"\n                    on:input={(event) => (latitude = event.target.value)}\n                    placeholder=\"Latitude\"\n                />\n            </div>\n            <div class=\"input\">\n                <label for=\"longitude\">Longitude</label>\n                <input\n                    type=\"Number\"\n                    class=\"Longitude\"\n                    id=\"longitude\"\n                    on:input={(event) => (longitude = event.target.value)}\n                    placeholder=\"Longitude\"\n                />\n            </div>\n            <div class=\"input\">\n                <label for=\"past-date\">Past-date</label>\n                <input\n                    id=\"past-date\"\n                    type=\"date\"\n                    on:input={(event) => (pDate = event.target.value)}\n                    placeholder=\"Recent date\"\n                />\n            </div>\n\n            <div class=\"input\">\n                <label for=\"present-date\">Present-date</label>\n                <input\n                    id=\"present-date\"\n                    type=\"date\"\n                    on:input={(event) => (rDate = event.target.value)}\n                    placeholder=\"Past date\"\n                />\n            </div>\n        </div>\n        <input type=\"submit\" on:click={submitForm} class=\"submit\" />\n    </div>\n    <div class=\"compare-results\">\n        <div class=\"results\">\n            {#if showImages}\n                <div class=\"past-result\" bind:this={pastImageDiv}>\n                    {#if isLoading1}\n                        <LoadingSpinnerSatellite />\n                    {/if}\n                    <h2>Date: {pDate}</h2>\n                </div>\n                <div class=\"recent-result\" bind:this={recentImageDiv}>\n                    {#if isLoading2}\n                        <LoadingSpinnerSatellite />\n                    {/if}\n                    <h2>Date: {rDate}</h2>\n                </div>\n            {/if}\n        </div>\n    </div>\n</div> -->\n\n<div class=\"search-container\">\n\t<div class=\"field-container lat\">\n\t\t<input\n\t\t\ttype=\"Number\"\n\t\t\tid=\"latitude\"\n\t\t\tclass=\"latitude\"\n\t\t\ton:input={(event) => (latitude = event.target.value)}\n\t\t\tplaceholder=\"Latitude\"\n\t\t/>\n\t</div>\n\t<div class=\"field-container long\">\n\t\t<input\n\t\t\ttype=\"Number\"\n\t\t\tclass=\"Longitude\"\n\t\t\tid=\"longitude\"\n\t\t\ton:input={(event) => (longitude = event.target.value)}\n\t\t\tplaceholder=\"Longitude\"\n\t\t/>\n\t</div>\n\t<div class=\"field-container past\">\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tid=\"past-date\"\n\t\t\tplaceholder=\"Past date\"\n\t\t\tonfocus=\"(this.type='date')\"\n\t\t\ton:input={(event) => (pDate = event.target.value)}\n\t\t/>\n\t</div>\n\t<div class=\"field-container pres\">\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tid=\"present-date\"\n\t\t\tplaceholder=\"Recent date\"\n\t\t\tonfocus=\"(this.type='date')\"\n\t\t\ton:input={(event) => (rDate = event.target.value)}\n\t\t/>\n\t</div>\n\t<div class=\"field-container btn\">\n\t\t<button class=\"btn-search\" on:click={submitForm} type=\"button\"\n\t\t\t>search</button\n\t\t>\n\t</div>\n</div>\n\n<div class=\"compare-results\">\n\t<div class=\"results\">\n\t\t{#if showImages}\n\t\t\t<div class=\"past-result\" bind:this={pastImageDiv}>\n\t\t\t\t{#if isLoading1}\n\t\t\t\t\t<LoadingSpinnerSatellite />\n\t\t\t\t{/if}\n\t\t\t\t<div class=\"date\">Date: {pDate}</div>\n\t\t\t</div>\n\t\t\t<div class=\"recent-result\" bind:this={recentImageDiv}>\n\t\t\t\t{#if isLoading2}\n\t\t\t\t\t<LoadingSpinnerSatellite />\n\t\t\t\t{/if}\n\t\t\t\t<div class=\"date\">Date : {rDate}</div>\n\t\t\t</div>\n\t\t{/if}\n\t</div>\n</div>\n\n<style>\n\t.compare-results {\n\t\tmargin: auto;\n\t\tmargin-top: 80px;\n\t\tpadding-left: 10px;\n\t\twidth: 70%;\n\t\theight: 50%;\n\t\t/* background-color: aliceblue; */\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n\t.results {\n\t\t/* background-color: blue; */\n\t\tdisplay: flex;\n\t\theight: 100%;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\t/* margin-top: 30px; */\n\t}\n\t.past-result,\n\t.recent-result {\n\t\tborder-radius: 3px;\n\t\tborder: transparent;\n\t\twidth: 300px;\n\t\theight: 300px;\n\t\tmargin: 20px;\n\t\ttext-align: center;\n\t\tbackground-color: var(--secondary);\n\t\tposition: relative;\n\t}\n\n\t.date {\n\t\tposition: absolute;\n\t\ttext-align: center;\n\t\tbottom: 0;\n\t\twidth: 100%;\n\t\tpadding: 10px;\n\t\tbackground-color: rgba(0, 0, 0, 0.5);\n\t\tcolor: var(--text);\n\t}\n\n\t.search-container {\n\t\twidth: 70%;\n\t\t/* background-color: aqua; */\n\t\theight: 40px;\n\t\tmargin: 0 auto;\n\t\tborder-radius: 3px;\n\t\tborder: transparent;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n\t.field-container {\n\t\twidth: 20%;\n\t\theight: 100%;\n\t\tmargin: auto;\n\t\tmargin-right: 10px;\n\t}\n\n\tinput,\n\tbutton {\n\t\tborder-radius: 3px;\n\t\tborder: transparent;\n\t\tbackground-color: var(--secondary);\n\t\tpadding-left: 10px;\n\t\tmargin-left: 10px;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tcolor: var(--text);\n\t\tborder: 0;\n\t\ttext-transform: capitalize;\n\t}\n\n\t.field-container button {\n\t\tcursor: pointer;\n\t\tpadding-left: 0;\n\t\ttext-transform: uppercase;\n\t\tbackground-color: var(--accent);\n\t}\n\n\tinput:focus,\n\tbutton:focus {\n\t\toutline: 0;\n\t}\n\n\tinput::-webkit-outer-spin-button,\n\tinput::-webkit-inner-spin-button {\n\t\t-webkit-appearance: none;\n\t\tmargin: 0;\n\t}\n\n\t::-webkit-calendar-picker-indicator {\n\t\tfilter: invert(99%) sepia(10%) saturate(500%) hue-rotate(155deg);\n\t\tmargin-right: 5px;\n\t}\n\n\t/* .main-compare-container h1 {\n        position: relative;\n        text-align: center;\n        background-color: #2c394b;\n        border-radius: 20px;\n        box-shadow: 0 0 10px 0 #334756, 0 20px 25px 0 rgba(0, 0, 0, 0.1);\n        margin: 50px;\n        padding: 40px;\n        position: relative;\n    }\n    .input {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .main-compare-container {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        color: #a1a1a1;\n    }\n\n    .main-compare-container .form {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        position: relative;\n        padding: 30px 40px 15px;\n        background-color: #203646;\n        border-radius: 20px;\n        box-shadow: 0 0 3px 2px #071c2d, 0 20px 25px 0 rgba(0, 0, 0, 0.99);\n        font-size: 20px;\n        margin-bottom: 30px;\n    }\n    .inputs {\n        display: flex;\n        flex-direction: column;\n    }\n\n    .main-compare-container .form input {\n        height: 60px;\n        width: 100%;\n        padding: 15px 20px;\n        border-radius: 10px;\n        outline: none;\n        border: 1px solid rgb(0, 0, 0);\n        position: relative;\n    }\n\n    .main-compare-container .form input::placeholder {\n        font-size: 25px;\n    }\n    label {\n        width: 150px;\n        font-size: 20px;\n        margin-right: 20px;\n    }\n\n    .main-compare-container .form input[type=\"submit\"] {\n        outline: none;\n        padding: 10px 10px;\n        margin-top: 10px;\n        color: #fff;\n        font-size: 25px;\n        border: none;\n        cursor: pointer;\n        width: 30%;\n        background-color: #082032;\n        border-radius: 30px;\n        box-shadow: 0 0 15px 0 #a1a1a1, 0 20px 25px 0 rgba(0, 0, 0, 0.2);\n    }\n\n    .main-compare-container .form input[type=\"submit\"]:hover {\n        background-color: #a1a1a1;\n        color: #082032;\n    }\n\n    .main-compare-container .form input[type=\"date\"] {\n        font-size: 25px;\n        color: rgb(121, 115, 115);\n    }\n\n    .compare-results {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .results {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin-top: 30px;\n    }\n\n    .past-result,\n    .recent-result {\n        width: 45%;\n        // height: 100%;\n        margin: 20px;\n        text-align: center;\n    } */\n</style>\n","<script>\n</script>\n\n<main id=\"main\">\n  <link\n    href=\"https://fonts.googleapis.com/css?family=Lato:300,400,700\"\n    rel=\"stylesheet\"\n    type=\"text/css\"\n  />\n  <div id=\"stars\" />\n  <div id=\"stars2\" />\n  <div id=\"stars3\" />\n\n  <div>\n    <h2 class=\"first\">About</h2>\n  </div>\n  <div class=\"two\">\n    <h2 class=\"second\">Description</h2>\n  </div>\n  <div class=\"section-2\">\n    <div class=\"tab\">\n      <h3>AstroPark</h3>\n      AstroPark is a project built using the NASA API. It has two segments - a\n      Frontend and a Backend. Frontend portrays the information received\n      from the backend. The backend works as an intermediate proxy server which processes\n      and pipes the response back to the frontend.<br /> AstroPart comprises of\n      the given features.\n      <br />- APOD Homepage\n      <br />- Media Library\n      <br />- Landsat Image Retriever(LIR)\n    </div>\n    <div class=\"tab\">\n      <h3>APOD Homepage</h3>\n      The APOD Homepage is an informative homepage. This homepage is designed with\n      the help of APOD API provided by NASA. The cover page of AstroPark changes\n      on a daily basis. Along with the picture, user is provided with some description\n      related to the picture.\n    </div>\n    <div class=\"tab\">\n      <h3>Library</h3>\n      AstroPark Media Library develops a link with Media Library of NASA. The required\n      data is retrieved based upon the keyword. As a result, a grid of pictures are\n      displayed based upon the keyword. And along with the pictures, the information\n      regarding those pictures is also displayed to the user.\n    </div>\n    <div class=\"tab\">\n      <h3>Landsat Image Retriever</h3>\n      LIR feature works with the help of Earth API. The user is required to fill\n      the details in the given form. Based upon the values of Latitude and Longitude,\n      the satellite images of that particular region taken on the provided dates\n      are retrieved, proccessed from the database and are displayed.\n    </div>\n  </div>\n\n  <div>\n    <h2 class=\"third\">Meet the Team</h2>\n    <div class=\"box\">\n      <div class=\"flip-card\">\n        <div class=\"flip-card-inner\">\n          <div class=\"flip-card-front\">\n            <img\n              src=\"./Images/A1.png\"\n              alt=\"Avatar\"\n              style=\"width:300px;height:300px;border-radius:30px\"\n            />\n          </div>\n          <div class=\"flip-card-back\">\n            <h1>Habeeb Ullah</h1>\n            <p>Backend Developer</p>\n            <!-- <p>We love that guy</p> -->\n\n            <a\n              target=\"_blank\"\n              href=\"https://twitter.com/TheOpCoder\"\n              class=\"fab fa-twitter-square\"\n            />\n            <a\n              target=\"_blank\"\n              href=\"https://github.com/HabeebUllahTabrez\"\n              class=\"fab fa-github-square\"\n            />\n            <a\n              target=\"_blank\"\n              href=\"https://www.linkedin.com/in/mohammed-habeeb-ullah-tabrez-914001191/\"\n              class=\"fab fa-linkedin\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div class=\"flip-card\">\n        <div class=\"flip-card-inner\">\n          <div class=\"flip-card-front\">\n            <img\n              src=\"./Images/A2.png\"\n              alt=\"Avatar\"\n              style=\"width:300px;height:300px;border-radius:30px\"\n            />\n          </div>\n          <div class=\"flip-card-back\">\n            <h1>Sadiya Noorain</h1>\n            <p>Frontend Developer</p>\n            <!-- <p>We love that guy</p> -->\n\n            <a\n              target=\"_blank\"\n              href=\"https://twitter.com/Sadiya_0613\"\n              class=\"fab fa-twitter-square\"\n            />\n            <a\n              target=\"_blank\"\n              href=\"https://github.com/Sadiya1noorain\"\n              class=\"fab fa-github-square\"\n            />\n            <a\n              target=\"_blank\"\n              href=\"https://www.linkedin.com/in/sadiya-noorain/\"\n              class=\"fab fa-linkedin\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div>\n    <h2 class=\"fourth\" style=\"margin-bottom:20px\">\n      Know More About the Project\n    </h2>\n    <div class=\"section-4\">\n      <p>\n        The frontend is created using SvelteJS and it is deployed on GitHub\n        pages <a\n          target=\"_blank\"\n          href=\"https://habeebullahtabrez.github.io/AstroPark\"\n          class=\"know\">https://habeebullahtabrez.github.io/AstroPark</a\n        >\n      </p>\n      <p>\n        The backend is created using NodeJS and ExpressJS. It is deployed on\n        Heroku <a\n          target=\"_blank\"\n          href=\"https://astropark.herokuapp.com/\"\n          class=\"know\">https://astropark.herokuapp.com/</a\n        >\n      </p>\n      <p>\n        To view the source code of the Frontend visit : <a\n          target=\"_blank\"\n          href=\"https://github.com/HabeebUllahTabrez/AstroPark\"\n          class=\"know\">https://github.com/HabeebUllahTabrez/AstroPark</a\n        >\n      </p>\n      <p>\n        To view the source code of the Backend visit : <a\n          target=\"_blank\"\n          href=\"https://github.com/HabeebUllahTabrez/AstroPark-REST-API\"\n          class=\"know\"\n          >https://github.com/HabeebUllahTabrez/AstroPark-REST-API</a\n        >\n      </p>\n      <p>The documentation of AstroPark is available on <a\n        target=\"_blank\"\n        href=\"https://www.icloud.com/pages/0d2Q3FjATEaH2gfbK0xs20Anw#Report\"\n        class=\"know\"\n        >https://www.icloud.com/pages/0d2Q3FjATEaH2gfbK0xs20Anw#Report</a\n      >\n\n      </p>\n      <p>\n        The PPT of AstroPark is available on <a\n          target=\"_blank\"\n          href=\"https://www.icloud.com/keynote/0048dnY4SFdIVXCWdeBcL0qAg#PPT_1\"\n          class=\"know\"\n          >https://www.icloud.com/keynote/0048dnY4SFdIVXCWdeBcL0qAg#PPT_1</a\n        >\n      </p>\n      <p>To know more, contact us</p>\n    </div>\n  </div>\n</main>\n\n<style>\n  /* html {\n  height: 100%;\n  background: radial-gradient(ellipse at bottom, #1b2735 0%, #090a0f 100%);\n  overflow: hidden;\n} */\n\n  #stars {\n    width: 1px;\n    height: 1px;\n    background: transparent;\n    box-shadow: 1066px 1314px #fff, 1290px 779px #fff, 469px 108px #fff,\n      407px 504px #fff, 1621px 1051px #fff, 229px 1598px #fff, 627px 878px #fff,\n      383px 651px #fff, 1119px 751px #fff, 1086px 127px #fff, 884px 723px #fff,\n      232px 22px #fff, 1850px 1307px #fff, 562px 466px #fff, 1739px 1333px #fff,\n      2px 1705px #fff, 538px 95px #fff, 1979px 133px #fff, 984px 1962px #fff,\n      1300px 1334px #fff, 1138px 786px #fff, 1183px 659px #fff,\n      466px 1662px #fff, 38px 549px #fff, 1604px 543px #fff, 1148px 1992px #fff,\n      1557px 60px #fff, 1864px 538px #fff, 369px 1330px #fff, 1554px 802px #fff,\n      294px 1571px #fff, 1349px 1211px #fff, 599px 900px #fff, 890px 1285px #fff,\n      814px 932px #fff, 242px 640px #fff, 356px 104px #fff, 657px 1664px #fff,\n      1224px 1952px #fff, 488px 751px #fff, 589px 1520px #fff, 966px 179px #fff,\n      238px 408px #fff, 1487px 1293px #fff, 595px 80px #fff, 72px 1667px #fff,\n      1296px 1160px #fff, 1540px 1483px #fff, 523px 1954px #fff,\n      1244px 1849px #fff, 1725px 175px #fff, 1036px 257px #fff,\n      735px 1223px #fff, 1404px 675px #fff, 1032px 1999px #fff,\n      1124px 896px #fff, 824px 1095px #fff, 1821px 1032px #fff, 367px 189px #fff,\n      1620px 1328px #fff, 304px 821px #fff, 532px 164px #fff, 418px 624px #fff,\n      423px 1216px #fff, 1744px 243px #fff, 938px 393px #fff, 1582px 1673px #fff,\n      1957px 1924px #fff, 1131px 58px #fff, 1198px 1316px #fff, 7px 1148px #fff,\n      1888px 1565px #fff, 199px 652px #fff, 1205px 953px #fff, 187px 977px #fff,\n      1230px 1516px #fff, 286px 1609px #fff, 815px 300px #fff, 1226px 290px #fff,\n      1519px 681px #fff, 846px 89px #fff, 236px 428px #fff, 1917px 1666px #fff,\n      388px 564px #fff, 1076px 936px #fff, 160px 125px #fff, 1810px 1697px #fff,\n      1535px 1600px #fff, 1518px 1817px #fff, 1018px 242px #fff,\n      564px 1730px #fff, 911px 1729px #fff, 952px 495px #fff, 43px 222px #fff,\n      1954px 475px #fff, 376px 1266px #fff, 1285px 1024px #fff,\n      1156px 1703px #fff, 780px 976px #fff, 1531px 295px #fff, 1355px 408px #fff,\n      1704px 1264px #fff, 1391px 1px #fff, 435px 1422px #fff, 889px 358px #fff,\n      673px 1346px #fff, 1417px 1837px #fff, 1542px 881px #fff, 79px 368px #fff,\n      1023px 1171px #fff, 400px 327px #fff, 570px 516px #fff, 1188px 1450px #fff,\n      1183px 5px #fff, 1801px 1830px #fff, 613px 608px #fff, 392px 1437px #fff,\n      732px 107px #fff, 1635px 127px #fff, 551px 1508px #fff, 1146px 1487px #fff,\n      850px 839px #fff, 1361px 1474px #fff, 363px 106px #fff, 1730px 1710px #fff,\n      281px 1154px #fff, 142px 1625px #fff, 1435px 77px #fff, 11px 1751px #fff,\n      716px 144px #fff, 796px 291px #fff, 1675px 31px #fff, 1992px 629px #fff,\n      1518px 336px #fff, 1812px 1470px #fff, 1014px 847px #fff,\n      1799px 929px #fff, 757px 77px #fff, 82px 1906px #fff, 1275px 1680px #fff,\n      1679px 1788px #fff, 275px 1011px #fff, 255px 279px #fff, 1853px 674px #fff,\n      684px 1062px #fff, 1294px 625px #fff, 1267px 147px #fff, 1690px 382px #fff,\n      727px 1758px #fff, 845px 171px #fff, 20px 533px #fff, 1055px 1805px #fff,\n      473px 459px #fff, 1334px 1558px #fff, 344px 1262px #fff,\n      1889px 1050px #fff, 931px 1503px #fff, 806px 1516px #fff,\n      1831px 1412px #fff, 545px 354px #fff, 281px 1447px #fff,\n      1523px 1370px #fff, 1863px 248px #fff, 1955px 1029px #fff,\n      736px 1569px #fff, 1723px 644px #fff, 277px 1138px #fff, 642px 374px #fff,\n      1598px 272px #fff, 1975px 377px #fff, 663px 82px #fff, 252px 215px #fff,\n      52px 237px #fff, 1028px 1902px #fff, 152px 1194px #fff, 1536px 472px #fff,\n      798px 1959px #fff, 258px 1281px #fff, 1653px 1493px #fff, 377px 879px #fff,\n      1203px 1619px #fff, 448px 1053px #fff, 1161px 837px #fff,\n      796px 1358px #fff, 1535px 302px #fff, 1266px 1836px #fff,\n      1100px 600px #fff, 1386px 671px #fff, 263px 1664px #fff, 1338px 317px #fff,\n      438px 1203px #fff, 1098px 789px #fff, 494px 32px #fff, 941px 409px #fff,\n      1567px 693px #fff, 83px 311px #fff, 943px 643px #fff, 432px 1815px #fff,\n      1812px 445px #fff, 1585px 1778px #fff, 1987px 1531px #fff,\n      1768px 983px #fff, 1656px 1785px #fff, 195px 1473px #fff, 306px 311px #fff,\n      1726px 679px #fff, 1199px 1009px #fff, 1992px 1544px #fff, 70px 372px #fff,\n      1334px 1694px #fff, 1413px 1129px #fff, 1512px 1653px #fff,\n      1555px 393px #fff, 1607px 969px #fff, 1441px 1687px #fff, 440px 412px #fff,\n      297px 984px #fff, 1127px 1464px #fff, 1219px 1150px #fff, 765px 853px #fff,\n      394px 493px #fff, 75px 100px #fff, 419px 1163px #fff, 80px 1902px #fff,\n      1639px 410px #fff, 1657px 1732px #fff, 303px 293px #fff, 446px 1165px #fff,\n      1388px 138px #fff, 1126px 1285px #fff, 71px 461px #fff, 1028px 916px #fff,\n      586px 1286px #fff, 1301px 329px #fff, 323px 833px #fff, 315px 1105px #fff,\n      1618px 536px #fff, 1445px 1903px #fff, 855px 1458px #fff,\n      389px 1458px #fff, 1018px 926px #fff, 1966px 1080px #fff, 202px 345px #fff,\n      1667px 466px #fff, 1840px 1212px #fff, 1682px 18px #fff, 238px 1852px #fff,\n      1734px 787px #fff, 1141px 1196px #fff, 1930px 1401px #fff,\n      1248px 831px #fff, 276px 1408px #fff, 1659px 997px #fff, 1353px 742px #fff,\n      633px 360px #fff, 771px 1378px #fff, 231px 397px #fff, 584px 37px #fff,\n      143px 284px #fff, 360px 1402px #fff, 1614px 1370px #fff, 173px 1608px #fff,\n      1222px 56px #fff, 363px 104px #fff, 110px 1517px #fff, 1299px 382px #fff,\n      160px 1605px #fff, 1269px 1576px #fff, 1883px 153px #fff,\n      309px 1585px #fff, 1753px 672px #fff, 392px 1233px #fff, 1419px 999px #fff,\n      1758px 45px #fff, 437px 122px #fff, 1499px 252px #fff, 26px 207px #fff,\n      1816px 667px #fff, 823px 434px #fff, 211px 302px #fff, 421px 515px #fff,\n      756px 811px #fff, 255px 848px #fff, 239px 35px #fff, 765px 1120px #fff,\n      498px 1711px #fff, 1257px 489px #fff, 1940px 115px #fff, 1801px 129px #fff,\n      957px 357px #fff, 431px 1292px #fff, 1269px 1509px #fff, 630px 234px #fff,\n      285px 479px #fff, 1017px 634px #fff, 518px 1322px #fff, 1526px 271px #fff,\n      1826px 222px #fff, 579px 189px #fff, 608px 1137px #fff, 853px 1971px #fff,\n      535px 1751px #fff, 61px 1552px #fff, 1162px 1589px #fff, 60px 1435px #fff,\n      260px 1841px #fff, 186px 1321px #fff, 1039px 672px #fff,\n      1406px 1733px #fff, 256px 168px #fff, 639px 1861px #fff,\n      1052px 1701px #fff, 418px 796px #fff, 43px 1268px #fff, 1446px 1670px #fff,\n      1125px 1958px #fff, 987px 1043px #fff, 487px 214px #fff, 593px 1360px #fff,\n      104px 692px #fff, 1816px 37px #fff, 412px 1708px #fff, 313px 288px #fff,\n      703px 1194px #fff, 1314px 1536px #fff, 1322px 116px #fff,\n      217px 1074px #fff, 1370px 554px #fff, 1952px 1670px #fff,\n      1175px 1099px #fff, 114px 1043px #fff, 1346px 83px #fff, 1336px 63px #fff,\n      742px 105px #fff, 968px 207px #fff, 937px 802px #fff, 62px 398px #fff,\n      1991px 350px #fff, 345px 468px #fff, 68px 850px #fff, 1404px 670px #fff,\n      1859px 1500px #fff, 1210px 1212px #fff, 1597px 117px #fff,\n      564px 1118px #fff, 352px 368px #fff, 1405px 264px #fff, 943px 1633px #fff,\n      569px 135px #fff, 307px 389px #fff, 1195px 652px #fff, 1503px 586px #fff,\n      959px 1452px #fff, 1190px 680px #fff, 291px 1729px #fff, 689px 500px #fff,\n      1642px 1013px #fff, 827px 540px #fff, 583px 1556px #fff, 135px 1837px #fff,\n      343px 1120px #fff, 1398px 1330px #fff, 1295px 691px #fff,\n      318px 1643px #fff, 2px 1819px #fff, 1497px 881px #fff, 42px 1500px #fff,\n      570px 788px #fff, 174px 1968px #fff, 1131px 1946px #fff, 1320px 206px #fff,\n      137px 875px #fff, 914px 1518px #fff, 1307px 572px #fff, 1729px 175px #fff,\n      1667px 341px #fff, 1149px 595px #fff, 624px 1352px #fff,\n      1987px 1929px #fff, 622px 1169px #fff, 266px 940px #fff, 1218px 641px #fff,\n      1650px 532px #fff, 715px 1688px #fff, 1146px 87px #fff, 1587px 1073px #fff,\n      366px 236px #fff, 463px 1322px #fff, 1461px 1132px #fff, 996px 1387px #fff,\n      1475px 1965px #fff, 1175px 1369px #fff, 1698px 1111px #fff,\n      474px 1051px #fff, 1590px 724px #fff, 7px 356px #fff, 1519px 639px #fff,\n      1895px 444px #fff, 1679px 585px #fff, 1934px 1247px #fff, 753px 359px #fff,\n      1114px 1187px #fff, 53px 358px #fff, 1587px 1092px #fff, 963px 487px #fff,\n      99px 761px #fff, 1418px 824px #fff, 1479px 659px #fff, 1826px 62px #fff,\n      1596px 401px #fff, 1569px 845px #fff, 1227px 1988px #fff,\n      696px 1356px #fff, 203px 176px #fff, 1084px 1747px #fff,\n      1987px 1190px #fff, 526px 881px #fff, 1523px 981px #fff, 77px 1712px #fff,\n      1368px 1602px #fff, 1572px 1164px #fff, 1590px 22px #fff,\n      1507px 299px #fff, 492px 1887px #fff, 769px 151px #fff, 1982px 881px #fff,\n      1131px 1909px #fff, 1667px 94px #fff, 1785px 953px #fff, 1596px 99px #fff,\n      1148px 1872px #fff, 281px 586px #fff, 169px 736px #fff, 1008px 1396px #fff,\n      1927px 463px #fff, 1863px 350px #fff, 1773px 1284px #fff,\n      928px 1026px #fff, 1527px 1341px #fff, 1677px 305px #fff,\n      1123px 1399px #fff, 185px 1187px #fff, 1365px 937px #fff,\n      1617px 360px #fff, 1263px 468px #fff, 547px 838px #fff, 1211px 1216px #fff,\n      617px 1893px #fff, 233px 88px #fff, 569px 154px #fff, 872px 836px #fff,\n      972px 1293px #fff, 402px 1939px #fff, 1085px 1981px #fff, 107px 11px #fff,\n      1623px 508px #fff, 743px 1189px #fff, 1289px 594px #fff,\n      1107px 1088px #fff, 347px 78px #fff, 695px 1283px #fff, 1051px 672px #fff,\n      1598px 1385px #fff, 621px 270px #fff, 1572px 657px #fff,\n      1567px 1875px #fff, 412px 322px #fff, 541px 922px #fff, 1502px 422px #fff,\n      930px 14px #fff, 700px 764px #fff, 1430px 450px #fff, 1049px 1193px #fff,\n      13px 1971px #fff, 876px 1428px #fff, 309px 35px #fff, 789px 1101px #fff,\n      1343px 1496px #fff, 392px 867px #fff, 1392px 1657px #fff,\n      115px 1105px #fff, 1262px 174px #fff, 30px 1343px #fff, 901px 452px #fff,\n      1678px 1432px #fff, 1099px 1057px #fff, 341px 714px #fff, 654px 746px #fff,\n      758px 225px #fff, 815px 386px #fff, 1354px 601px #fff, 965px 1784px #fff,\n      1338px 564px #fff, 1972px 517px #fff, 1383px 1760px #fff, 576px 210px #fff,\n      1315px 763px #fff, 1832px 1252px #fff, 146px 1772px #fff,\n      1318px 572px #fff, 1805px 1575px #fff, 874px 1308px #fff,\n      1512px 361px #fff, 1120px 538px #fff, 877px 1699px #fff, 1044px 497px #fff,\n      1063px 1618px #fff, 1201px 1079px #fff, 709px 1088px #fff,\n      1599px 1089px #fff, 1388px 1986px #fff, 500px 452px #fff,\n      1732px 987px #fff, 1198px 721px #fff, 503px 1159px #fff, 627px 1420px #fff,\n      878px 1056px #fff, 714px 242px #fff, 1019px 799px #fff, 144px 1574px #fff,\n      1680px 63px #fff, 1348px 783px #fff, 1796px 705px #fff, 993px 923px #fff,\n      1260px 1499px #fff, 595px 231px #fff, 756px 509px #fff, 1440px 207px #fff,\n      1982px 1710px #fff, 779px 992px #fff, 131px 1177px #fff, 214px 1200px #fff,\n      936px 1151px #fff, 1277px 1211px #fff, 690px 1472px #fff,\n      1067px 620px #fff, 666px 1236px #fff, 1080px 1274px #fff,\n      1257px 666px #fff, 272px 616px #fff, 1372px 1118px #fff,\n      1569px 1016px #fff, 549px 608px #fff, 556px 1842px #fff, 367px 8px #fff,\n      340px 1563px #fff, 641px 1770px #fff, 945px 1823px #fff,\n      1415px 1448px #fff, 799px 1590px #fff, 527px 418px #fff, 703px 1202px #fff,\n      580px 1380px #fff, 1884px 659px #fff, 1667px 1294px #fff,\n      1910px 581px #fff, 1827px 906px #fff, 1542px 344px #fff, 1122px 185px #fff,\n      1866px 600px #fff, 1848px 1775px #fff, 576px 500px #fff, 66px 1623px #fff,\n      694px 1183px #fff, 1300px 1748px #fff, 103px 1284px #fff,\n      1178px 820px #fff, 420px 1010px #fff, 594px 1405px #fff, 316px 111px #fff,\n      757px 1841px #fff, 372px 351px #fff, 906px 251px #fff, 854px 1883px #fff,\n      1521px 559px #fff, 735px 456px #fff, 1815px 340px #fff, 118px 506px #fff,\n      1903px 406px #fff, 689px 1455px #fff, 460px 954px #fff, 1411px 1074px #fff,\n      1583px 802px #fff, 808px 1213px #fff, 1182px 729px #fff, 807px 470px #fff,\n      230px 1086px #fff, 1419px 1561px #fff, 850px 631px #fff, 90px 48px #fff,\n      1077px 1562px #fff, 594px 1579px #fff, 1237px 816px #fff,\n      1772px 578px #fff, 1176px 1776px #fff, 604px 670px #fff, 1867px 184px #fff,\n      1985px 1563px #fff, 1918px 355px #fff, 952px 748px #fff,\n      1524px 1042px #fff, 484px 1785px #fff, 796px 871px #fff,\n      1961px 1254px #fff, 1656px 83px #fff, 727px 1678px #fff, 1052px 9px #fff,\n      1785px 1417px #fff, 1887px 956px #fff, 42px 156px #fff, 420px 404px #fff,\n      19px 534px #fff, 313px 1437px #fff, 1497px 1380px #fff, 720px 1856px #fff,\n      14px 704px #fff, 1698px 1133px #fff, 1719px 407px #fff, 713px 826px #fff,\n      1828px 1651px #fff, 1011px 323px #fff, 974px 1279px #fff,\n      270px 1831px #fff, 568px 1434px #fff, 1678px 969px #fff, 26px 1660px #fff,\n      633px 152px #fff, 512px 235px #fff, 1930px 1769px #fff, 495px 100px #fff,\n      13px 221px #fff, 1592px 1922px #fff, 1563px 1567px #fff, 737px 1778px #fff,\n      1423px 725px #fff, 681px 220px #fff, 878px 1268px #fff, 1975px 1632px #fff,\n      982px 1114px #fff, 772px 1169px #fff, 132px 1103px #fff, 610px 379px #fff,\n      1682px 1321px #fff, 996px 1385px #fff, 693px 1662px #fff,\n      1815px 190px #fff, 1902px 1295px #fff, 539px 1500px #fff,\n      1052px 1418px #fff, 1949px 4px #fff, 1757px 1102px #fff, 107px 641px #fff,\n      883px 1915px #fff, 157px 1087px #fff, 280px 433px #fff, 1529px 1413px #fff,\n      882px 274px #fff, 1465px 566px #fff, 68px 1020px #fff, 1722px 896px #fff,\n      1419px 473px #fff, 1879px 329px #fff, 1719px 452px #fff, 992px 1241px #fff,\n      1154px 1915px #fff, 211px 1809px #fff, 1284px 1585px #fff,\n      266px 1219px #fff, 363px 755px #fff, 1337px 1071px #fff,\n      1013px 1494px #fff, 317px 649px #fff, 1906px 1015px #fff,\n      1537px 823px #fff, 245px 1595px #fff, 677px 690px #fff, 1383px 670px #fff,\n      244px 1773px #fff, 650px 1266px #fff, 258px 1779px #fff, 416px 268px #fff,\n      1983px 1217px #fff, 685px 853px #fff, 1824px 1285px #fff, 1598px 10px #fff,\n      325px 69px #fff, 1970px 872px #fff, 547px 651px #fff, 299px 1437px #fff,\n      194px 1749px #fff, 1844px 724px #fff, 325px 383px #fff, 544px 1969px #fff,\n      373px 110px #fff, 1121px 1277px #fff, 1614px 1695px #fff,\n      1494px 639px #fff, 494px 24px #fff, 553px 407px #fff, 202px 160px #fff;\n    animation: animStar 50s linear infinite;\n  }\n  #stars:after {\n    content: \" \";\n    position: absolute;\n    top: 2000px;\n    width: 1px;\n    height: 1px;\n    background: transparent;\n    box-shadow: 1066px 1314px #fff, 1290px 779px #fff, 469px 108px #fff,\n      407px 504px #fff, 1621px 1051px #fff, 229px 1598px #fff, 627px 878px #fff,\n      383px 651px #fff, 1119px 751px #fff, 1086px 127px #fff, 884px 723px #fff,\n      232px 22px #fff, 1850px 1307px #fff, 562px 466px #fff, 1739px 1333px #fff,\n      2px 1705px #fff, 538px 95px #fff, 1979px 133px #fff, 984px 1962px #fff,\n      1300px 1334px #fff, 1138px 786px #fff, 1183px 659px #fff,\n      466px 1662px #fff, 38px 549px #fff, 1604px 543px #fff, 1148px 1992px #fff,\n      1557px 60px #fff, 1864px 538px #fff, 369px 1330px #fff, 1554px 802px #fff,\n      294px 1571px #fff, 1349px 1211px #fff, 599px 900px #fff, 890px 1285px #fff,\n      814px 932px #fff, 242px 640px #fff, 356px 104px #fff, 657px 1664px #fff,\n      1224px 1952px #fff, 488px 751px #fff, 589px 1520px #fff, 966px 179px #fff,\n      238px 408px #fff, 1487px 1293px #fff, 595px 80px #fff, 72px 1667px #fff,\n      1296px 1160px #fff, 1540px 1483px #fff, 523px 1954px #fff,\n      1244px 1849px #fff, 1725px 175px #fff, 1036px 257px #fff,\n      735px 1223px #fff, 1404px 675px #fff, 1032px 1999px #fff,\n      1124px 896px #fff, 824px 1095px #fff, 1821px 1032px #fff, 367px 189px #fff,\n      1620px 1328px #fff, 304px 821px #fff, 532px 164px #fff, 418px 624px #fff,\n      423px 1216px #fff, 1744px 243px #fff, 938px 393px #fff, 1582px 1673px #fff,\n      1957px 1924px #fff, 1131px 58px #fff, 1198px 1316px #fff, 7px 1148px #fff,\n      1888px 1565px #fff, 199px 652px #fff, 1205px 953px #fff, 187px 977px #fff,\n      1230px 1516px #fff, 286px 1609px #fff, 815px 300px #fff, 1226px 290px #fff,\n      1519px 681px #fff, 846px 89px #fff, 236px 428px #fff, 1917px 1666px #fff,\n      388px 564px #fff, 1076px 936px #fff, 160px 125px #fff, 1810px 1697px #fff,\n      1535px 1600px #fff, 1518px 1817px #fff, 1018px 242px #fff,\n      564px 1730px #fff, 911px 1729px #fff, 952px 495px #fff, 43px 222px #fff,\n      1954px 475px #fff, 376px 1266px #fff, 1285px 1024px #fff,\n      1156px 1703px #fff, 780px 976px #fff, 1531px 295px #fff, 1355px 408px #fff,\n      1704px 1264px #fff, 1391px 1px #fff, 435px 1422px #fff, 889px 358px #fff,\n      673px 1346px #fff, 1417px 1837px #fff, 1542px 881px #fff, 79px 368px #fff,\n      1023px 1171px #fff, 400px 327px #fff, 570px 516px #fff, 1188px 1450px #fff,\n      1183px 5px #fff, 1801px 1830px #fff, 613px 608px #fff, 392px 1437px #fff,\n      732px 107px #fff, 1635px 127px #fff, 551px 1508px #fff, 1146px 1487px #fff,\n      850px 839px #fff, 1361px 1474px #fff, 363px 106px #fff, 1730px 1710px #fff,\n      281px 1154px #fff, 142px 1625px #fff, 1435px 77px #fff, 11px 1751px #fff,\n      716px 144px #fff, 796px 291px #fff, 1675px 31px #fff, 1992px 629px #fff,\n      1518px 336px #fff, 1812px 1470px #fff, 1014px 847px #fff,\n      1799px 929px #fff, 757px 77px #fff, 82px 1906px #fff, 1275px 1680px #fff,\n      1679px 1788px #fff, 275px 1011px #fff, 255px 279px #fff, 1853px 674px #fff,\n      684px 1062px #fff, 1294px 625px #fff, 1267px 147px #fff, 1690px 382px #fff,\n      727px 1758px #fff, 845px 171px #fff, 20px 533px #fff, 1055px 1805px #fff,\n      473px 459px #fff, 1334px 1558px #fff, 344px 1262px #fff,\n      1889px 1050px #fff, 931px 1503px #fff, 806px 1516px #fff,\n      1831px 1412px #fff, 545px 354px #fff, 281px 1447px #fff,\n      1523px 1370px #fff, 1863px 248px #fff, 1955px 1029px #fff,\n      736px 1569px #fff, 1723px 644px #fff, 277px 1138px #fff, 642px 374px #fff,\n      1598px 272px #fff, 1975px 377px #fff, 663px 82px #fff, 252px 215px #fff,\n      52px 237px #fff, 1028px 1902px #fff, 152px 1194px #fff, 1536px 472px #fff,\n      798px 1959px #fff, 258px 1281px #fff, 1653px 1493px #fff, 377px 879px #fff,\n      1203px 1619px #fff, 448px 1053px #fff, 1161px 837px #fff,\n      796px 1358px #fff, 1535px 302px #fff, 1266px 1836px #fff,\n      1100px 600px #fff, 1386px 671px #fff, 263px 1664px #fff, 1338px 317px #fff,\n      438px 1203px #fff, 1098px 789px #fff, 494px 32px #fff, 941px 409px #fff,\n      1567px 693px #fff, 83px 311px #fff, 943px 643px #fff, 432px 1815px #fff,\n      1812px 445px #fff, 1585px 1778px #fff, 1987px 1531px #fff,\n      1768px 983px #fff, 1656px 1785px #fff, 195px 1473px #fff, 306px 311px #fff,\n      1726px 679px #fff, 1199px 1009px #fff, 1992px 1544px #fff, 70px 372px #fff,\n      1334px 1694px #fff, 1413px 1129px #fff, 1512px 1653px #fff,\n      1555px 393px #fff, 1607px 969px #fff, 1441px 1687px #fff, 440px 412px #fff,\n      297px 984px #fff, 1127px 1464px #fff, 1219px 1150px #fff, 765px 853px #fff,\n      394px 493px #fff, 75px 100px #fff, 419px 1163px #fff, 80px 1902px #fff,\n      1639px 410px #fff, 1657px 1732px #fff, 303px 293px #fff, 446px 1165px #fff,\n      1388px 138px #fff, 1126px 1285px #fff, 71px 461px #fff, 1028px 916px #fff,\n      586px 1286px #fff, 1301px 329px #fff, 323px 833px #fff, 315px 1105px #fff,\n      1618px 536px #fff, 1445px 1903px #fff, 855px 1458px #fff,\n      389px 1458px #fff, 1018px 926px #fff, 1966px 1080px #fff, 202px 345px #fff,\n      1667px 466px #fff, 1840px 1212px #fff, 1682px 18px #fff, 238px 1852px #fff,\n      1734px 787px #fff, 1141px 1196px #fff, 1930px 1401px #fff,\n      1248px 831px #fff, 276px 1408px #fff, 1659px 997px #fff, 1353px 742px #fff,\n      633px 360px #fff, 771px 1378px #fff, 231px 397px #fff, 584px 37px #fff,\n      143px 284px #fff, 360px 1402px #fff, 1614px 1370px #fff, 173px 1608px #fff,\n      1222px 56px #fff, 363px 104px #fff, 110px 1517px #fff, 1299px 382px #fff,\n      160px 1605px #fff, 1269px 1576px #fff, 1883px 153px #fff,\n      309px 1585px #fff, 1753px 672px #fff, 392px 1233px #fff, 1419px 999px #fff,\n      1758px 45px #fff, 437px 122px #fff, 1499px 252px #fff, 26px 207px #fff,\n      1816px 667px #fff, 823px 434px #fff, 211px 302px #fff, 421px 515px #fff,\n      756px 811px #fff, 255px 848px #fff, 239px 35px #fff, 765px 1120px #fff,\n      498px 1711px #fff, 1257px 489px #fff, 1940px 115px #fff, 1801px 129px #fff,\n      957px 357px #fff, 431px 1292px #fff, 1269px 1509px #fff, 630px 234px #fff,\n      285px 479px #fff, 1017px 634px #fff, 518px 1322px #fff, 1526px 271px #fff,\n      1826px 222px #fff, 579px 189px #fff, 608px 1137px #fff, 853px 1971px #fff,\n      535px 1751px #fff, 61px 1552px #fff, 1162px 1589px #fff, 60px 1435px #fff,\n      260px 1841px #fff, 186px 1321px #fff, 1039px 672px #fff,\n      1406px 1733px #fff, 256px 168px #fff, 639px 1861px #fff,\n      1052px 1701px #fff, 418px 796px #fff, 43px 1268px #fff, 1446px 1670px #fff,\n      1125px 1958px #fff, 987px 1043px #fff, 487px 214px #fff, 593px 1360px #fff,\n      104px 692px #fff, 1816px 37px #fff, 412px 1708px #fff, 313px 288px #fff,\n      703px 1194px #fff, 1314px 1536px #fff, 1322px 116px #fff,\n      217px 1074px #fff, 1370px 554px #fff, 1952px 1670px #fff,\n      1175px 1099px #fff, 114px 1043px #fff, 1346px 83px #fff, 1336px 63px #fff,\n      742px 105px #fff, 968px 207px #fff, 937px 802px #fff, 62px 398px #fff,\n      1991px 350px #fff, 345px 468px #fff, 68px 850px #fff, 1404px 670px #fff,\n      1859px 1500px #fff, 1210px 1212px #fff, 1597px 117px #fff,\n      564px 1118px #fff, 352px 368px #fff, 1405px 264px #fff, 943px 1633px #fff,\n      569px 135px #fff, 307px 389px #fff, 1195px 652px #fff, 1503px 586px #fff,\n      959px 1452px #fff, 1190px 680px #fff, 291px 1729px #fff, 689px 500px #fff,\n      1642px 1013px #fff, 827px 540px #fff, 583px 1556px #fff, 135px 1837px #fff,\n      343px 1120px #fff, 1398px 1330px #fff, 1295px 691px #fff,\n      318px 1643px #fff, 2px 1819px #fff, 1497px 881px #fff, 42px 1500px #fff,\n      570px 788px #fff, 174px 1968px #fff, 1131px 1946px #fff, 1320px 206px #fff,\n      137px 875px #fff, 914px 1518px #fff, 1307px 572px #fff, 1729px 175px #fff,\n      1667px 341px #fff, 1149px 595px #fff, 624px 1352px #fff,\n      1987px 1929px #fff, 622px 1169px #fff, 266px 940px #fff, 1218px 641px #fff,\n      1650px 532px #fff, 715px 1688px #fff, 1146px 87px #fff, 1587px 1073px #fff,\n      366px 236px #fff, 463px 1322px #fff, 1461px 1132px #fff, 996px 1387px #fff,\n      1475px 1965px #fff, 1175px 1369px #fff, 1698px 1111px #fff,\n      474px 1051px #fff, 1590px 724px #fff, 7px 356px #fff, 1519px 639px #fff,\n      1895px 444px #fff, 1679px 585px #fff, 1934px 1247px #fff, 753px 359px #fff,\n      1114px 1187px #fff, 53px 358px #fff, 1587px 1092px #fff, 963px 487px #fff,\n      99px 761px #fff, 1418px 824px #fff, 1479px 659px #fff, 1826px 62px #fff,\n      1596px 401px #fff, 1569px 845px #fff, 1227px 1988px #fff,\n      696px 1356px #fff, 203px 176px #fff, 1084px 1747px #fff,\n      1987px 1190px #fff, 526px 881px #fff, 1523px 981px #fff, 77px 1712px #fff,\n      1368px 1602px #fff, 1572px 1164px #fff, 1590px 22px #fff,\n      1507px 299px #fff, 492px 1887px #fff, 769px 151px #fff, 1982px 881px #fff,\n      1131px 1909px #fff, 1667px 94px #fff, 1785px 953px #fff, 1596px 99px #fff,\n      1148px 1872px #fff, 281px 586px #fff, 169px 736px #fff, 1008px 1396px #fff,\n      1927px 463px #fff, 1863px 350px #fff, 1773px 1284px #fff,\n      928px 1026px #fff, 1527px 1341px #fff, 1677px 305px #fff,\n      1123px 1399px #fff, 185px 1187px #fff, 1365px 937px #fff,\n      1617px 360px #fff, 1263px 468px #fff, 547px 838px #fff, 1211px 1216px #fff,\n      617px 1893px #fff, 233px 88px #fff, 569px 154px #fff, 872px 836px #fff,\n      972px 1293px #fff, 402px 1939px #fff, 1085px 1981px #fff, 107px 11px #fff,\n      1623px 508px #fff, 743px 1189px #fff, 1289px 594px #fff,\n      1107px 1088px #fff, 347px 78px #fff, 695px 1283px #fff, 1051px 672px #fff,\n      1598px 1385px #fff, 621px 270px #fff, 1572px 657px #fff,\n      1567px 1875px #fff, 412px 322px #fff, 541px 922px #fff, 1502px 422px #fff,\n      930px 14px #fff, 700px 764px #fff, 1430px 450px #fff, 1049px 1193px #fff,\n      13px 1971px #fff, 876px 1428px #fff, 309px 35px #fff, 789px 1101px #fff,\n      1343px 1496px #fff, 392px 867px #fff, 1392px 1657px #fff,\n      115px 1105px #fff, 1262px 174px #fff, 30px 1343px #fff, 901px 452px #fff,\n      1678px 1432px #fff, 1099px 1057px #fff, 341px 714px #fff, 654px 746px #fff,\n      758px 225px #fff, 815px 386px #fff, 1354px 601px #fff, 965px 1784px #fff,\n      1338px 564px #fff, 1972px 517px #fff, 1383px 1760px #fff, 576px 210px #fff,\n      1315px 763px #fff, 1832px 1252px #fff, 146px 1772px #fff,\n      1318px 572px #fff, 1805px 1575px #fff, 874px 1308px #fff,\n      1512px 361px #fff, 1120px 538px #fff, 877px 1699px #fff, 1044px 497px #fff,\n      1063px 1618px #fff, 1201px 1079px #fff, 709px 1088px #fff,\n      1599px 1089px #fff, 1388px 1986px #fff, 500px 452px #fff,\n      1732px 987px #fff, 1198px 721px #fff, 503px 1159px #fff, 627px 1420px #fff,\n      878px 1056px #fff, 714px 242px #fff, 1019px 799px #fff, 144px 1574px #fff,\n      1680px 63px #fff, 1348px 783px #fff, 1796px 705px #fff, 993px 923px #fff,\n      1260px 1499px #fff, 595px 231px #fff, 756px 509px #fff, 1440px 207px #fff,\n      1982px 1710px #fff, 779px 992px #fff, 131px 1177px #fff, 214px 1200px #fff,\n      936px 1151px #fff, 1277px 1211px #fff, 690px 1472px #fff,\n      1067px 620px #fff, 666px 1236px #fff, 1080px 1274px #fff,\n      1257px 666px #fff, 272px 616px #fff, 1372px 1118px #fff,\n      1569px 1016px #fff, 549px 608px #fff, 556px 1842px #fff, 367px 8px #fff,\n      340px 1563px #fff, 641px 1770px #fff, 945px 1823px #fff,\n      1415px 1448px #fff, 799px 1590px #fff, 527px 418px #fff, 703px 1202px #fff,\n      580px 1380px #fff, 1884px 659px #fff, 1667px 1294px #fff,\n      1910px 581px #fff, 1827px 906px #fff, 1542px 344px #fff, 1122px 185px #fff,\n      1866px 600px #fff, 1848px 1775px #fff, 576px 500px #fff, 66px 1623px #fff,\n      694px 1183px #fff, 1300px 1748px #fff, 103px 1284px #fff,\n      1178px 820px #fff, 420px 1010px #fff, 594px 1405px #fff, 316px 111px #fff,\n      757px 1841px #fff, 372px 351px #fff, 906px 251px #fff, 854px 1883px #fff,\n      1521px 559px #fff, 735px 456px #fff, 1815px 340px #fff, 118px 506px #fff,\n      1903px 406px #fff, 689px 1455px #fff, 460px 954px #fff, 1411px 1074px #fff,\n      1583px 802px #fff, 808px 1213px #fff, 1182px 729px #fff, 807px 470px #fff,\n      230px 1086px #fff, 1419px 1561px #fff, 850px 631px #fff, 90px 48px #fff,\n      1077px 1562px #fff, 594px 1579px #fff, 1237px 816px #fff,\n      1772px 578px #fff, 1176px 1776px #fff, 604px 670px #fff, 1867px 184px #fff,\n      1985px 1563px #fff, 1918px 355px #fff, 952px 748px #fff,\n      1524px 1042px #fff, 484px 1785px #fff, 796px 871px #fff,\n      1961px 1254px #fff, 1656px 83px #fff, 727px 1678px #fff, 1052px 9px #fff,\n      1785px 1417px #fff, 1887px 956px #fff, 42px 156px #fff, 420px 404px #fff,\n      19px 534px #fff, 313px 1437px #fff, 1497px 1380px #fff, 720px 1856px #fff,\n      14px 704px #fff, 1698px 1133px #fff, 1719px 407px #fff, 713px 826px #fff,\n      1828px 1651px #fff, 1011px 323px #fff, 974px 1279px #fff,\n      270px 1831px #fff, 568px 1434px #fff, 1678px 969px #fff, 26px 1660px #fff,\n      633px 152px #fff, 512px 235px #fff, 1930px 1769px #fff, 495px 100px #fff,\n      13px 221px #fff, 1592px 1922px #fff, 1563px 1567px #fff, 737px 1778px #fff,\n      1423px 725px #fff, 681px 220px #fff, 878px 1268px #fff, 1975px 1632px #fff,\n      982px 1114px #fff, 772px 1169px #fff, 132px 1103px #fff, 610px 379px #fff,\n      1682px 1321px #fff, 996px 1385px #fff, 693px 1662px #fff,\n      1815px 190px #fff, 1902px 1295px #fff, 539px 1500px #fff,\n      1052px 1418px #fff, 1949px 4px #fff, 1757px 1102px #fff, 107px 641px #fff,\n      883px 1915px #fff, 157px 1087px #fff, 280px 433px #fff, 1529px 1413px #fff,\n      882px 274px #fff, 1465px 566px #fff, 68px 1020px #fff, 1722px 896px #fff,\n      1419px 473px #fff, 1879px 329px #fff, 1719px 452px #fff, 992px 1241px #fff,\n      1154px 1915px #fff, 211px 1809px #fff, 1284px 1585px #fff,\n      266px 1219px #fff, 363px 755px #fff, 1337px 1071px #fff,\n      1013px 1494px #fff, 317px 649px #fff, 1906px 1015px #fff,\n      1537px 823px #fff, 245px 1595px #fff, 677px 690px #fff, 1383px 670px #fff,\n      244px 1773px #fff, 650px 1266px #fff, 258px 1779px #fff, 416px 268px #fff,\n      1983px 1217px #fff, 685px 853px #fff, 1824px 1285px #fff, 1598px 10px #fff,\n      325px 69px #fff, 1970px 872px #fff, 547px 651px #fff, 299px 1437px #fff,\n      194px 1749px #fff, 1844px 724px #fff, 325px 383px #fff, 544px 1969px #fff,\n      373px 110px #fff, 1121px 1277px #fff, 1614px 1695px #fff,\n      1494px 639px #fff, 494px 24px #fff, 553px 407px #fff, 202px 160px #fff;\n  }\n\n  #stars2 {\n    width: 2px;\n    height: 2px;\n    background: transparent;\n    box-shadow: 1743px 1520px #fff, 1443px 1327px #fff, 1507px 1455px #fff,\n      1878px 551px #fff, 1253px 1173px #fff, 979px 1455px #fff,\n      1552px 952px #fff, 1656px 1556px #fff, 1630px 1529px #fff,\n      1213px 1083px #fff, 761px 783px #fff, 336px 60px #fff, 488px 133px #fff,\n      682px 450px #fff, 118px 812px #fff, 1474px 1515px #fff, 1346px 1542px #fff,\n      1948px 1749px #fff, 974px 1463px #fff, 1719px 681px #fff, 605px 440px #fff,\n      927px 297px #fff, 570px 1416px #fff, 687px 1949px #fff, 296px 1341px #fff,\n      1376px 496px #fff, 1933px 113px #fff, 703px 1244px #fff, 1074px 240px #fff,\n      966px 1723px #fff, 1844px 540px #fff, 227px 238px #fff, 37px 92px #fff,\n      769px 186px #fff, 657px 681px #fff, 311px 65px #fff, 556px 610px #fff,\n      1348px 1556px #fff, 1163px 1656px #fff, 821px 826px #fff,\n      827px 1663px #fff, 1714px 584px #fff, 802px 1031px #fff, 1417px 71px #fff,\n      1786px 1647px #fff, 1483px 697px #fff, 1871px 1101px #fff,\n      1310px 1601px #fff, 1911px 98px #fff, 1389px 655px #fff,\n      1466px 1623px #fff, 1319px 207px #fff, 658px 662px #fff,\n      1999px 1319px #fff, 1806px 785px #fff, 371px 1737px #fff, 950px 761px #fff,\n      1793px 1689px #fff, 1702px 1856px #fff, 520px 1117px #fff,\n      437px 395px #fff, 1726px 1814px #fff, 788px 1872px #fff, 1859px 629px #fff,\n      99px 1949px #fff, 1082px 44px #fff, 781px 348px #fff, 183px 233px #fff,\n      272px 442px #fff, 1954px 875px #fff, 1427px 673px #fff, 764px 970px #fff,\n      1143px 1886px #fff, 1588px 876px #fff, 1522px 523px #fff,\n      326px 1009px #fff, 1833px 1114px #fff, 1988px 1168px #fff,\n      707px 778px #fff, 1639px 1424px #fff, 1843px 1350px #fff, 761px 368px #fff,\n      77px 633px #fff, 1237px 257px #fff, 1993px 835px #fff, 1681px 524px #fff,\n      1399px 1787px #fff, 208px 888px #fff, 1618px 336px #fff,\n      1132px 1272px #fff, 1828px 1377px #fff, 974px 1751px #fff,\n      1522px 659px #fff, 1512px 601px #fff, 1681px 978px #fff, 1437px 827px #fff,\n      1753px 12px #fff, 1825px 835px #fff, 1410px 1526px #fff, 1095px 48px #fff,\n      169px 154px #fff, 1880px 1948px #fff, 575px 171px #fff, 944px 1684px #fff,\n      1028px 262px #fff, 893px 428px #fff, 1122px 543px #fff, 1963px 1790px #fff,\n      1511px 8px #fff, 208px 374px #fff, 1773px 1115px #fff, 280px 213px #fff,\n      582px 1674px #fff, 219px 1379px #fff, 1396px 1082px #fff,\n      1555px 238px #fff, 1940px 1939px #fff, 812px 1634px #fff,\n      985px 1931px #fff, 1044px 1681px #fff, 1898px 491px #fff,\n      1280px 1839px #fff, 465px 1200px #fff, 1719px 807px #fff,\n      1783px 426px #fff, 884px 1912px #fff, 1009px 1993px #fff, 49px 903px #fff,\n      1502px 1241px #fff, 1584px 1588px #fff, 423px 484px #fff,\n      376px 1972px #fff, 1738px 139px #fff, 420px 1644px #fff, 1177px 245px #fff,\n      1666px 513px #fff, 66px 202px #fff, 563px 369px #fff, 261px 1275px #fff,\n      891px 512px #fff, 1809px 93px #fff, 1479px 185px #fff, 696px 797px #fff,\n      1728px 4px #fff, 66px 1555px #fff, 1614px 294px #fff, 1031px 1206px #fff,\n      168px 934px #fff, 1564px 572px #fff, 1050px 416px #fff, 1348px 419px #fff,\n      1065px 157px #fff, 1218px 71px #fff, 44px 1738px #fff, 1744px 1100px #fff,\n      1669px 267px #fff, 249px 796px #fff, 1525px 153px #fff, 1257px 1277px #fff,\n      1543px 279px #fff, 1039px 354px #fff, 475px 1698px #fff, 424px 232px #fff,\n      1235px 1614px #fff, 715px 1688px #fff, 981px 858px #fff,\n      1739px 1588px #fff, 1612px 574px #fff, 1715px 532px #fff,\n      1187px 1646px #fff, 360px 1865px #fff, 864px 1932px #fff, 227px 412px #fff,\n      1457px 1023px #fff, 734px 416px #fff, 318px 934px #fff, 979px 920px #fff,\n      365px 693px #fff, 1399px 1577px #fff, 1462px 747px #fff, 321px 1979px #fff,\n      415px 359px #fff, 248px 1725px #fff, 624px 488px #fff, 274px 807px #fff,\n      1038px 1012px #fff, 157px 1508px #fff, 282px 214px #fff, 1366px 427px #fff,\n      534px 376px #fff, 737px 331px #fff, 1679px 726px #fff, 1193px 1958px #fff,\n      1495px 1028px #fff, 1880px 442px #fff, 258px 1999px #fff, 904px 16px #fff,\n      1305px 149px #fff, 1704px 1105px #fff, 159px 888px #fff;\n    animation: animStar 100s linear infinite;\n  }\n  #stars2:after {\n    content: \" \";\n    position: absolute;\n    top: 2000px;\n    width: 2px;\n    height: 2px;\n    background: transparent;\n    box-shadow: 1743px 1520px #fff, 1443px 1327px #fff, 1507px 1455px #fff,\n      1878px 551px #fff, 1253px 1173px #fff, 979px 1455px #fff,\n      1552px 952px #fff, 1656px 1556px #fff, 1630px 1529px #fff,\n      1213px 1083px #fff, 761px 783px #fff, 336px 60px #fff, 488px 133px #fff,\n      682px 450px #fff, 118px 812px #fff, 1474px 1515px #fff, 1346px 1542px #fff,\n      1948px 1749px #fff, 974px 1463px #fff, 1719px 681px #fff, 605px 440px #fff,\n      927px 297px #fff, 570px 1416px #fff, 687px 1949px #fff, 296px 1341px #fff,\n      1376px 496px #fff, 1933px 113px #fff, 703px 1244px #fff, 1074px 240px #fff,\n      966px 1723px #fff, 1844px 540px #fff, 227px 238px #fff, 37px 92px #fff,\n      769px 186px #fff, 657px 681px #fff, 311px 65px #fff, 556px 610px #fff,\n      1348px 1556px #fff, 1163px 1656px #fff, 821px 826px #fff,\n      827px 1663px #fff, 1714px 584px #fff, 802px 1031px #fff, 1417px 71px #fff,\n      1786px 1647px #fff, 1483px 697px #fff, 1871px 1101px #fff,\n      1310px 1601px #fff, 1911px 98px #fff, 1389px 655px #fff,\n      1466px 1623px #fff, 1319px 207px #fff, 658px 662px #fff,\n      1999px 1319px #fff, 1806px 785px #fff, 371px 1737px #fff, 950px 761px #fff,\n      1793px 1689px #fff, 1702px 1856px #fff, 520px 1117px #fff,\n      437px 395px #fff, 1726px 1814px #fff, 788px 1872px #fff, 1859px 629px #fff,\n      99px 1949px #fff, 1082px 44px #fff, 781px 348px #fff, 183px 233px #fff,\n      272px 442px #fff, 1954px 875px #fff, 1427px 673px #fff, 764px 970px #fff,\n      1143px 1886px #fff, 1588px 876px #fff, 1522px 523px #fff,\n      326px 1009px #fff, 1833px 1114px #fff, 1988px 1168px #fff,\n      707px 778px #fff, 1639px 1424px #fff, 1843px 1350px #fff, 761px 368px #fff,\n      77px 633px #fff, 1237px 257px #fff, 1993px 835px #fff, 1681px 524px #fff,\n      1399px 1787px #fff, 208px 888px #fff, 1618px 336px #fff,\n      1132px 1272px #fff, 1828px 1377px #fff, 974px 1751px #fff,\n      1522px 659px #fff, 1512px 601px #fff, 1681px 978px #fff, 1437px 827px #fff,\n      1753px 12px #fff, 1825px 835px #fff, 1410px 1526px #fff, 1095px 48px #fff,\n      169px 154px #fff, 1880px 1948px #fff, 575px 171px #fff, 944px 1684px #fff,\n      1028px 262px #fff, 893px 428px #fff, 1122px 543px #fff, 1963px 1790px #fff,\n      1511px 8px #fff, 208px 374px #fff, 1773px 1115px #fff, 280px 213px #fff,\n      582px 1674px #fff, 219px 1379px #fff, 1396px 1082px #fff,\n      1555px 238px #fff, 1940px 1939px #fff, 812px 1634px #fff,\n      985px 1931px #fff, 1044px 1681px #fff, 1898px 491px #fff,\n      1280px 1839px #fff, 465px 1200px #fff, 1719px 807px #fff,\n      1783px 426px #fff, 884px 1912px #fff, 1009px 1993px #fff, 49px 903px #fff,\n      1502px 1241px #fff, 1584px 1588px #fff, 423px 484px #fff,\n      376px 1972px #fff, 1738px 139px #fff, 420px 1644px #fff, 1177px 245px #fff,\n      1666px 513px #fff, 66px 202px #fff, 563px 369px #fff, 261px 1275px #fff,\n      891px 512px #fff, 1809px 93px #fff, 1479px 185px #fff, 696px 797px #fff,\n      1728px 4px #fff, 66px 1555px #fff, 1614px 294px #fff, 1031px 1206px #fff,\n      168px 934px #fff, 1564px 572px #fff, 1050px 416px #fff, 1348px 419px #fff,\n      1065px 157px #fff, 1218px 71px #fff, 44px 1738px #fff, 1744px 1100px #fff,\n      1669px 267px #fff, 249px 796px #fff, 1525px 153px #fff, 1257px 1277px #fff,\n      1543px 279px #fff, 1039px 354px #fff, 475px 1698px #fff, 424px 232px #fff,\n      1235px 1614px #fff, 715px 1688px #fff, 981px 858px #fff,\n      1739px 1588px #fff, 1612px 574px #fff, 1715px 532px #fff,\n      1187px 1646px #fff, 360px 1865px #fff, 864px 1932px #fff, 227px 412px #fff,\n      1457px 1023px #fff, 734px 416px #fff, 318px 934px #fff, 979px 920px #fff,\n      365px 693px #fff, 1399px 1577px #fff, 1462px 747px #fff, 321px 1979px #fff,\n      415px 359px #fff, 248px 1725px #fff, 624px 488px #fff, 274px 807px #fff,\n      1038px 1012px #fff, 157px 1508px #fff, 282px 214px #fff, 1366px 427px #fff,\n      534px 376px #fff, 737px 331px #fff, 1679px 726px #fff, 1193px 1958px #fff,\n      1495px 1028px #fff, 1880px 442px #fff, 258px 1999px #fff, 904px 16px #fff,\n      1305px 149px #fff, 1704px 1105px #fff, 159px 888px #fff;\n  }\n\n  #stars3 {\n    width: 3px;\n    height: 3px;\n    background: transparent;\n    box-shadow: 663px 1021px #fff, 381px 1794px #fff, 474px 1264px #fff,\n      85px 1607px #fff, 1141px 1583px #fff, 1378px 1133px #fff,\n      487px 1868px #fff, 1997px 538px #fff, 1306px 363px #fff,\n      1043px 1512px #fff, 883px 1906px #fff, 1329px 1514px #fff,\n      1749px 192px #fff, 1632px 337px #fff, 794px 1454px #fff, 502px 1496px #fff,\n      107px 1964px #fff, 908px 1710px #fff, 1260px 43px #fff, 131px 1340px #fff,\n      1090px 478px #fff, 586px 896px #fff, 1121px 1414px #fff, 398px 1688px #fff,\n      1607px 1554px #fff, 46px 1806px #fff, 20px 696px #fff, 1644px 1207px #fff,\n      1407px 1924px #fff, 1916px 54px #fff, 434px 890px #fff, 523px 1698px #fff,\n      122px 537px #fff, 636px 681px #fff, 1201px 1099px #fff, 1968px 600px #fff,\n      1907px 106px #fff, 689px 1136px #fff, 172px 1174px #fff, 2000px 467px #fff,\n      81px 83px #fff, 478px 298px #fff, 680px 1392px #fff, 1184px 957px #fff,\n      1009px 1753px #fff, 1732px 1597px #fff, 794px 652px #fff,\n      606px 1061px #fff, 1563px 942px #fff, 1689px 1435px #fff, 860px 282px #fff,\n      1595px 1251px #fff, 635px 948px #fff, 1668px 925px #fff, 662px 1112px #fff,\n      250px 1361px #fff, 220px 383px #fff, 799px 1479px #fff, 12px 385px #fff,\n      579px 1657px #fff, 141px 777px #fff, 622px 838px #fff, 1829px 694px #fff,\n      622px 1481px #fff, 363px 741px #fff, 492px 1589px #fff, 1865px 758px #fff,\n      50px 1989px #fff, 818px 1268px #fff, 1819px 848px #fff, 461px 1807px #fff,\n      1215px 851px #fff, 902px 1830px #fff, 1852px 4px #fff, 1366px 1577px #fff,\n      1990px 1904px #fff, 1299px 1633px #fff, 921px 1893px #fff,\n      121px 434px #fff, 871px 115px #fff, 1609px 1566px #fff, 926px 1418px #fff,\n      1455px 184px #fff, 1354px 737px #fff, 1257px 1757px #fff,\n      222px 1158px #fff, 888px 1491px #fff, 1679px 229px #fff,\n      1448px 1375px #fff, 1010px 457px #fff, 1795px 845px #fff,\n      1366px 516px #fff, 1060px 435px #fff, 160px 1496px #fff, 14px 1279px #fff,\n      1961px 1860px #fff, 162px 947px #fff, 911px 1237px #fff,\n      1078px 1430px #fff, 794px 1154px #fff;\n    animation: animStar 150s linear infinite;\n  }\n  #stars3:after {\n    content: \" \";\n    position: absolute;\n    top: 2000px;\n    width: 3px;\n    height: 3px;\n    background: transparent;\n    box-shadow: 663px 1021px #fff, 381px 1794px #fff, 474px 1264px #fff,\n      85px 1607px #fff, 1141px 1583px #fff, 1378px 1133px #fff,\n      487px 1868px #fff, 1997px 538px #fff, 1306px 363px #fff,\n      1043px 1512px #fff, 883px 1906px #fff, 1329px 1514px #fff,\n      1749px 192px #fff, 1632px 337px #fff, 794px 1454px #fff, 502px 1496px #fff,\n      107px 1964px #fff, 908px 1710px #fff, 1260px 43px #fff, 131px 1340px #fff,\n      1090px 478px #fff, 586px 896px #fff, 1121px 1414px #fff, 398px 1688px #fff,\n      1607px 1554px #fff, 46px 1806px #fff, 20px 696px #fff, 1644px 1207px #fff,\n      1407px 1924px #fff, 1916px 54px #fff, 434px 890px #fff, 523px 1698px #fff,\n      122px 537px #fff, 636px 681px #fff, 1201px 1099px #fff, 1968px 600px #fff,\n      1907px 106px #fff, 689px 1136px #fff, 172px 1174px #fff, 2000px 467px #fff,\n      81px 83px #fff, 478px 298px #fff, 680px 1392px #fff, 1184px 957px #fff,\n      1009px 1753px #fff, 1732px 1597px #fff, 794px 652px #fff,\n      606px 1061px #fff, 1563px 942px #fff, 1689px 1435px #fff, 860px 282px #fff,\n      1595px 1251px #fff, 635px 948px #fff, 1668px 925px #fff, 662px 1112px #fff,\n      250px 1361px #fff, 220px 383px #fff, 799px 1479px #fff, 12px 385px #fff,\n      579px 1657px #fff, 141px 777px #fff, 622px 838px #fff, 1829px 694px #fff,\n      622px 1481px #fff, 363px 741px #fff, 492px 1589px #fff, 1865px 758px #fff,\n      50px 1989px #fff, 818px 1268px #fff, 1819px 848px #fff, 461px 1807px #fff,\n      1215px 851px #fff, 902px 1830px #fff, 1852px 4px #fff, 1366px 1577px #fff,\n      1990px 1904px #fff, 1299px 1633px #fff, 921px 1893px #fff,\n      121px 434px #fff, 871px 115px #fff, 1609px 1566px #fff, 926px 1418px #fff,\n      1455px 184px #fff, 1354px 737px #fff, 1257px 1757px #fff,\n      222px 1158px #fff, 888px 1491px #fff, 1679px 229px #fff,\n      1448px 1375px #fff, 1010px 457px #fff, 1795px 845px #fff,\n      1366px 516px #fff, 1060px 435px #fff, 160px 1496px #fff, 14px 1279px #fff,\n      1961px 1860px #fff, 162px 947px #fff, 911px 1237px #fff,\n      1078px 1430px #fff, 794px 1154px #fff;\n  }\n\n  @keyframes animStar {\n    from {\n      transform: translateY(0px);\n    }\n    to {\n      transform: translateY(-2000px);\n    }\n  }\n\n  #main {\n    background-image: linear-gradient(\n      to bottom,\n      #082032,\n      #192d3e,\n      #293b4a,\n      #394956,\n      #495863\n    );\n  }\n\n  .first {\n    font-size: 240px;\n    color: #a1a1a1;\n    height: 40vh;\n  }\n\n  .second,\n  .third,\n  .fourth {\n    font-size: 60px;\n    color: wheat;\n  }\n\n  h2 {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    position: relative;\n    font-weight: bolder;\n  }\n\n  .flip-card {\n    background-color: transparent;\n    width: 300px;\n    height: 300px;\n    perspective: 1000px;\n    margin: 20px 150px;\n  }\n\n  .flip-card-inner {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    transition: transform 1s;\n    transform-style: preserve-3d;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  }\n\n  .flip-card:hover .flip-card-inner {\n    transform: rotateY(180deg);\n  }\n\n  .flip-card-front,\n  .flip-card-back {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    -webkit-backface-visibility: hidden;\n    backface-visibility: hidden;\n  }\n\n  .flip-card-front {\n    background-color: #bbb;\n    color: black;\n  }\n\n  .flip-card-back {\n    background-color: #082032;\n    color: #a1a1a1;\n    transform: rotateY(180deg);\n  }\n\n  .box {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n  }\n\n  .fab {\n    color: #394c5a;\n    padding: 20px;\n    font-size: 35px;\n    width: 50px;\n    text-align: center;\n    text-decoration: none;\n    margin: 5px 2px;\n  }\n\n  .fab:hover {\n    opacity: 0.7;\n  }\n\n  .section-2 {\n    color: #c1c7cc;\n    padding: 30px 120px;\n    margin: 30px 120px;\n    font-size: 20px;\n    line-height: 1.5em;\n  }\n\n  h3 {\n    font-size: 40px;\n    line-height: 2em;\n    text-decoration: #c1c7cc dashed underline;\n    text-underline-position: under;\n  }\n\n  .section-4 {\n    color: #c1c7cc;\n    padding: 20px 120px;\n    margin: 20px 120px;\n    font-size: 25px;\n    line-height: 1.5em;\n  }\n\n  .know {\n    color: #2597ed;\n  }\n</style>\n","<script>\n\timport Header from \"./UI/Header.svelte\";\n\timport Homepage from \"./UI/Homepage.svelte\";\n\timport ApodView from \"./UI/ApodView.svelte\";\n\timport SearchView from \"./UI/SearchView.svelte\";\n\timport SatelliteView from \"./UI/SatelliteView.svelte\";\n\timport AboutView from \"./UI/AboutView.svelte\";\n\n\tlet path = 0;\n\n\tfunction setRoute(event) {\n\t\tpath = event.detail;\n\t}\n</script>\n\n<Header on:select={setRoute} />\n<!-- <Homepage /> -->\n<main>\n\t{#if path === 0}\n\t\t<Homepage />\n\t{:else if path === 1}\n\t\t<ApodView />\n\t{:else if path === 2}\n\t\t<SearchView />\n\t{:else if path === 3}\n\t\t<SatelliteView />\n\t{:else if path === 4}\n\t\t<AboutView />\n\t{/if}\n</main>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","toggle_class","toggle","classList","set_current_component","component","createEventDispatcher","Error","get_current_component","type","detail","callbacks","$$","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","dispatch","selectedButton","imageUrl","title","description","owner","fetched","axios","get","response","explanation","copyright","isEmpty","val","trim","filteredData","keyword","keywordValid","undefined","links","baseUrl","recentUrl","pastUrl","pastImageDiv","recentImageDiv","latitude","longitude","rDate","pDate","isLoading1","isLoading2","isFormValid","showImages","latitudeValid","longitudevalid","rDatevalid","pDatevalid","pastImage","Image","src","onload","querySelector","oldImg1","replaceChild","recentImage","oldImg2","path","body"],"mappings":"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"}